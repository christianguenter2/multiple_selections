REPORT.

CLASS lcl_main DEFINITION.
  PUBLIC SECTION.
    METHODS display.

  PROTECTED SECTION.
    TYPES: BEGIN OF ty_option,
             value   TYPE char10,
             text    TYPE string,
             checked TYPE boolean_flg,
           END OF ty_option.
    DATA: mytoolbar TYPE REF TO cl_gui_toolbar,
          options   TYPE STANDARD TABLE OF ty_option.
    METHODS build_menu.
    METHODS on_function_selected FOR EVENT function_selected OF cl_gui_toolbar
      IMPORTING fcode sender.

ENDCLASS.                    "lcl_my_event_handler DEFINITION


CLASS lcl_main IMPLEMENTATION.

  METHOD build_menu.

    DATA lv_icon TYPE icon_text.

    IF mytoolbar IS INITIAL.
      "Create docker on Top of the screen
      DATA(docker) = NEW cl_gui_docking_container( side = cl_gui_docking_container=>dock_at_left extension = 130 ).


      "create toolbar object
      mytoolbar = NEW #( parent       = docker
                         display_mode = cl_gui_toolbar=>m_mode_vertical ).

      "register events
      mytoolbar->set_registered_events( VALUE #( ( eventid = cl_gui_toolbar=>m_id_function_selected ) ) ).

      "Set handler
      SET HANDLER on_function_selected FOR mytoolbar.
    ELSE.
      mytoolbar->delete_all_buttons( ).
    ENDIF.

    LOOP AT options ASSIGNING FIELD-SYMBOL(<option>).
      IF <option>-checked = abap_false.
*        lv_icon = icon_led_red.
*        lv_icon = icon_space.
        lv_icon = icon_unlocked.
      ELSE.
*        lv_icon = icon_led_green.
*        lv_icon = icon_alarm.
        lv_icon = icon_locked.
      ENDIF.
      "add menu entry with current status
      mytoolbar->add_button( fcode      = CONV #( <option>-value )
                             icon       = lv_icon
                             is_checked = <option>-checked
                             butn_type  = cntb_btype_button
                             text       = CONV #( <option>-text ) ).

    ENDLOOP.

  ENDMETHOD.

  METHOD display.


    "set initial values
    options = VALUE #( ( value = 'ONE'   text = 'Option One' )
                       ( value = 'TWO'   text = 'Option Two' )
                       ( value = 'THREE' text = 'Option Three' )
                       ( value = 'FOUR'  text = 'Option Four' ) ).
    "Build menu
    build_menu( ).


  ENDMETHOD.

  METHOD on_function_selected.

    ASSIGN options[ value = fcode ] TO FIELD-SYMBOL(<option>).
    IF sy-subrc = 0.
      IF <option>-checked = abap_true.
        <option>-checked = abap_false.
      ELSE.
        <option>-checked = abap_true.
      ENDIF.
    ENDIF.

    build_menu( ).

  ENDMETHOD.                    "lcl_my_event_handler



ENDCLASS.                    "lcl_my_event_handler IMPLEMENTATION


INITIALIZATION.

  NEW lcl_main( )->display( ).


  PARAMETERS p_test.
